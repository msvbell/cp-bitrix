<?php
 namespace League\ISO3166; use League\ISO3166\Exception\DomainException; final class ISO3166DataValidator { public function validate(array $data) { foreach ($data as $entry) { $this->assertEntryHasRequiredKeys($entry); } return $data; } private function assertEntryHasRequiredKeys(array $entry) { if (!isset($entry[ISO3166::KEY_ALPHA2])) { throw new DomainException('Each data entry must have a valid alpha2 key.'); } Guards::guardAgainstInvalidAlpha2($entry[ISO3166::KEY_ALPHA2]); if (!isset($entry[ISO3166::KEY_ALPHA3])) { throw new DomainException('Each data entry must have a valid alpha3 key.'); } Guards::guardAgainstInvalidAlpha3($entry[ISO3166::KEY_ALPHA3]); if (!isset($entry[ISO3166::KEY_NUMERIC])) { throw new DomainException('Each data entry must have a valid numeric key.'); } Guards::guardAgainstInvalidNumeric($entry[ISO3166::KEY_NUMERIC]); } } 