<?php
namespace GuzzleHttp\Event; final class RequestEvents { const EARLY = 10000; const LATE = -10000; const PREPARE_REQUEST = -100; const SIGN_REQUEST = -10000; const VERIFY_RESPONSE = 100; const REDIRECT_RESPONSE = 200; public static function convertEventArray( array $options, array $events, $handler ) { foreach ($events as $name) { if (!isset($options[$name])) { $options[$name] = [$handler]; } elseif (is_callable($options[$name])) { $options[$name] = [$options[$name], $handler]; } elseif (is_array($options[$name])) { if (isset($options[$name]['fn'])) { $options[$name] = [$options[$name], $handler]; } else { $options[$name][] = $handler; } } else { throw new \InvalidArgumentException('Invalid event format'); } } return $options; } } 