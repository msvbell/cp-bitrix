<?php
namespace GuzzleHttp\Cookie; use GuzzleHttp\Utils; class FileCookieJar extends CookieJar { private $filename; public function __construct($cookieFile) { $this->filename = $cookieFile; if (file_exists($cookieFile)) { $this->load($cookieFile); } } public function __destruct() { $this->save($this->filename); } public function save($filename) { $json = []; foreach ($this as $cookie) { if ($cookie->getExpires() && !$cookie->getDiscard()) { $json[] = $cookie->toArray(); } } if (false === file_put_contents($filename, json_encode($json))) { throw new \RuntimeException("Unable to save file {$filename}"); } } public function load($filename) { $json = file_get_contents($filename); if (false === $json) { throw new \RuntimeException("Unable to load file {$filename}"); } $data = Utils::jsonDecode($json, true); if (is_array($data)) { foreach (Utils::jsonDecode($json, true) as $cookie) { $this->setCookie(new SetCookie($cookie)); } } elseif (strlen($data)) { throw new \RuntimeException("Invalid cookie file: {$filename}"); } } } 